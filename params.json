{
  "name": "SaaShard",
  "tagline": "根据具体业务数据的划分，实现MySQL下db级别的数据分片拆分。思路来源mycat和kingshard。",
  "body": "### 基于SaaS应用的数据分片\r\n每个租户的操作是相互独立的，一个业务db下每张表都会存在一个区分租户的租户字段，因此可以为每张表使用相同的db级别的分片策略，即按租户id进行分片。此做法有两个好处：\r\n* 增、删、改、查，都是仅针对一个租户的，很好的进行了隔离；\r\n* 保留了单个db内表之间的关联查询能力。\r\n\r\n### 支持读写分离\r\nDML（如update、insert、replace、delete）、DDL（create、drop、alter），在写库（Master）上执行；查询（如show、select），在读库（Slave）上执行；set语句，目前在写库（Master）上执行。\r\n\r\n读操作，如果有多台读库（Slave），则会以权重轮询方式，进行负载均衡。\r\n\r\n### 部分支持Hint\r\n仅支持select语句和DDL；set和show语句，暂时不支持。\r\n* 针对select语句，可以通过`/*!saashard master*/`强制在master上执行；\r\n* 针对DDL，可以通过`/*!saashard nodes=node1,node2*/`强制在指定的数据节点列表上执行（不设置默认在所有节点上执行）。\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}